<!-- $Id$ -->
<project name="Orbital" default="compile">

    <description>
    Build file for building Orbital Project.

    This script should be started with the following command line :

        ant [target]

    Run "ant -projecthelp" or "ant targets" to get a list of available
    targets. The default target is "compile".
    </description>

    <property name="build.sysclasspath" value="ignore"/>

    <target name="init">
        <tstamp>
            <format property="timestamp" pattern="d MMM yyyy HH:mm"/>
        </tstamp>

        <!-- basedir will be set to parent directory of this file -->
        <property name="classes" value="${basedir}/classes"/>
        <property name="sources" value="${basedir}/src"/>

        <property name="lib" value="${basedir}/lib"/>
        <property name="doc" value="${basedir}/doc"/>
        <property name="dist" value="${basedir}/dist"/>
        <property name="bin" value="${basedir}/bin"/>
        <property name="resources" value="${basedir}/resources"/>

        <path id="project.classpath">
            <pathelement location="${classes}"/>
            <fileset dir="${lib}">
                <include name="**/*.jar"/>
                <include name="**/*.zip"/>
            </fileset>
        </path>
    </target>

    <target name="targets" description="print out target list">
        <echo>
 
        Build file for building Orbital Project.
 
        This script should be started with the following command line :
 
            ant [target]
 
        These are the targets supported by this ANT build script,
        the default target is "compile":
 
        targets   - print out this target list
        all       - clean + fixCRLF + compile
        compile   - compile *.java (=> ./classes)
	compilerCompile - compile *.jj
        clean     - remove all *.class
        clean.bak - remove all backup files *.bak, *~, .#*
        fixCRLF   - fix DOS linefeeds (CRLF)
        doc       - generate javadoc (=> ./doc/api/)
	jjdoc	  - generate jjdoc (=> ./doc/api)
        jar       - build dist/*.jar
        env       - print out some properties for debugging build.xml
 
        </echo>
    </target>
 
    <target name="all" depends="init, clean, fixCRLF, compile"
            description="clean + fixCRLF + compile">
    </target>
 
    <target name="compile" depends="init"
            description="compile *.java (=> ./classes)">
        <mkdir dir="${classes}"/>
 
        <javac srcdir="${sources}"
               destdir="${classes}"
               debug="on"
	       source="1.4"
	       excludes="orbital/moon/aspects/**,orbital/moon/deprecated/**">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="compilerCompile" depends="init"
            description="compile *.jj (=> ./classes)">
        <javacc target="${sources}/orbital/moon/logic/LogicParser.jj" 
		javacchome="d:/Sprachen/java/Utilities/JavaCC"/>
        <javacc target="${sources}/orbital/moon/logic/MathParser.jj" 
		javacchome="d:/Sprachen/java/Utilities/JavaCC"/>
    </target>

    <target name="clean" depends="init"
            description="remove all *.class">
        <mkdir dir="${classes}"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${sources}/">
                <include name="**/*.class"/>
            </fileset>
            <fileset dir="${classes}"/>
        </delete>
    </target>

    <target name="clean.bak" depends="init"
            description="remove all backup files *.bak, *~, .#*">
        <delete>
            <fileset dir="${sources}/" defaultexcludes="no">
                <include name="**/*.bak"/>
                <include name="**/*~"/>
                <include name="**/.#*"/>
            </fileset>
        </delete>
        <exec dir="${sources}" executable="/bin/bash" os="Linux,linux">
            <arg line="-c &quot;find . -name '*~' | xargs rm -f&quot;"/>
        </exec>
    </target>
 
    <target name="fixCRLF" depends="init"
            description="fix DOS linefeeds (CRLF)">
        <fixcrlf srcdir="${sources}"
                 eol="lf" eof="remove"
                 includes="**/*.java"/>
    </target>

    <target name="doc" depends="init"
            description="generate javadoc (=> ./doc/api/)">
        <mkdir dir="${doc}/api"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${doc}/api"/>
        </delete>

        <javadoc maxmemory="256M"
                 failonerror="true"
                 sourcepath="${sources}" 
                 destdir="${doc}/api"
                 author="true"
                 version="true"
                 use="true"
		 additionalparam="-source 1.4 -tag param -tag pre:mc:&quot;Preconditions:&quot; -tag post:mc:&quot;Postconditions:&quot; -tag return -tag throws -tag stereotype:a:&quot;Stereotype:&quot; -tag structure:t:&quot;Structure:&quot; -tag invariant:t:&quot;Invariants:&quot; -tag attribute:a:&quot;Attributes:&quot; -tag version -tag author -tag see"

                 windowtitle="Orbital"
                 doctitle="Orbital library&lt;br&gt;API Specification"
                 header="&lt;b&gt;Orbital library&lt;/b&gt;"
                 footer="&lt;b&gt;Orbital library&lt;/b&gt;&lt;br&gt;${timestamp}"
		 overview="${doc}/overview.html"
                 packagenames="orbital.*"
		 excludepackagenames="orbital,orbital.robotic.strategy,orbital.util.graph,orbital.moon.aspects,orbital.moon.deprecated"
                 Public="true">
            <bottom><![CDATA[<span style='font-size: smaller; font-style: italic;'>Copyright &copy; 1996-2002 Andr&eacute; Platzer<br />All Rights Reserved.</span>]]></bottom>
	    <group title="Core Packages" packages="orbital.logic*:orbital.math:orbital.math*:orbital.util"/>
	    <group title="Extension Packages" packages="orbital.algorithm*:orbital.awt*:orbital.game:orbital.io:orbital.robotic"/>
	    <group title="Implementation Packages" packages="orbital.io.encoding:orbital.io.parsing:orbital.text:orbital.net:orbital.net.mail:orbital.moon*"/>
    		 <!--       -tag todo:Xa -tag xxx:Xa -tag fixme:Xa" -->
            <!-- link href="http://java.sun.com/products/jdk/1.3/docs/api/"/ -->
        </javadoc>

	<antcall target="jjdoc"/>

	<copy todir="${doc}/api/DesignPatterns">
	    <fileset dir="${doc}/DesignPatterns"/>
	</copy>

	<copy todir="${doc}/api">
	    <fileset dir="${doc}"
		includes="stylist.css, recommendations.*html, features.*html, templates.*html"/>
	</copy>

        <echo file="${doc}/api/stylesheet.css" append="true">	
	@media screen { a:link, a:visited {color:blue} }
	@import url("stylist.css");
	</echo>
    </target>

    <target name="jjdoc" depends="init"
            description="generate jjdoc (=> ./doc/api/)">
        <mkdir dir="${doc}/api/orbital/moon/logic/doc-files"/>
	<exec dir="${doc}/api/orbital/moon/logic" executable="cmd.exe" os="Windows 2000">
	    <arg line="/c jjdoc -OUTPUT_FILE:doc-files/LogicParser_grammar.html ${sources}/orbital/moon/logic/LogicParser.jj"/>
	</exec>
	<exec dir="${doc}/api/orbital/moon/logic" executable="cmd.exe" os="Windows 2000">
	    <arg line="/c jjdoc -OUTPUT_FILE:doc-files/MathParser_grammar.html ${sources}/orbital/moon/logic/MathParser.jj"/>
	</exec>
	<exec dir="${doc}/api/orbital/moon/logic" executable="cmd.exe" os="Windows 2000">
	    <arg line=" /c &quot;copy /A doc-files\LogicParser_grammar.html + ${basedir}\src\orbital\moon\logic\doc-files\LogicParser_lexical.html doc-files\LogicParser_grammar.html&quot;"/>
	</exec>
    </target>


    <target name="jar" depends="init, clean, compile"
            description="build dist/*.jar">
        <mkdir dir="${dist}"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${dist}/"/>
        </delete>
        <mkdir dir="${dist}"/>
 
        <jar jarfile="${dist}/orbital.jar">
            <fileset dir="${classes}"
                includes="**/*.class"/>
        </jar>
    </target>

    <target name="env" depends="init"> <!-- for debugging -->
        <echo>

        basedir=${basedir}
        sources=${sources}
        classes=${classes}
        lib=${lib}
        doc=${doc}
        dist=${dist}
        resources=${resources}

        </echo>
    </target>

</project>
