<!-- $Id$ -->
<project name="Orbital" default="compile">

    <description>
    Build file for building Orbital Project.

    This script should be started with the following command line :

        ant [target]

    Run "ant -projecthelp" or "ant targets" to get a list of available
    targets. The default target is "compile".
    </description>

    <property name="build.sysclasspath" value="ignore"/>

    <target name="init">
        <tstamp>
            <format property="timestamp" pattern="d MMM yyyy HH:mm"/>
        </tstamp>

        <!-- basedir will be set to parent directory of this file -->
        <property name="classes" value="${basedir}/classes"/>
        <property name="sources" value="${basedir}/src"/>

        <property name="lib" value="${basedir}/lib"/>
        <property name="doc" value="${basedir}/doc"/>
        <property name="dist" value="${basedir}/dist"/>
        <property name="bin" value="${basedir}/bin"/>
        <property name="resources" value="${basedir}/resources"/>

        <path id="project.classpath">
            <pathelement location="${classes}"/>
            <fileset dir="${lib}">
                <include name="**/*.jar"/>
                <include name="**/*.zip"/>
            </fileset>
        </path>
    </target>

    <target name="compile" depends="init"
            description="compile *.java (=> ./classes)">
        <mkdir dir="${classes}"/>

        <javac srcdir="${sources}"
               destdir="${classes}"
               debug="on">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="targets" description="print out target list">
        <echo>
 
        Build file for building Orbital Project.
 
        This script should be started with the following command line :
 
            ant [target]
 
        These are the targets supported by this ANT build script,
        the default target is "compile":
 
        targets   - print out this target list
        all       - clean + fixCRLF + compile
        compile   - compile *.java (=> ./classes)
        clean     - remove all *.class
        clean.bak - remove all backup files *.bak, *~, .#*
        fixCRLF   - fix DOS linefeeds (CRLF)
        doc       - generate javadoc (=> ./doc/api/)
        jar       - build dist/*.jar
        env       - print out some properties for debugging build.xml
 
        </echo>
    </target>
 
    <target name="all" depends="init, clean, fixCRLF, compile"
            description="clean + fixCRLF + compile">
    </target>
 
    <target name="compile" depends="init"
            description="compile *.java (=> ./classes)">
        <mkdir dir="${classes}"/>
 
        <javac srcdir="${sources}"
               destdir="${classes}"
               debug="on">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="clean" depends="init"
            description="remove all *.class">
        <mkdir dir="${classes}"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${sources}/">
                <include name="**/*.class"/>
            </fileset>
            <fileset dir="${classes}"/>
        </delete>
    </target>

    <target name="clean.bak" depends="init"
            description="remove all backup files *.bak, *~, .#*">
        <delete>
            <fileset dir="${sources}/" defaultexcludes="no">
                <include name="**/*.bak"/>
                <include name="**/*~"/>
                <include name="**/.#*"/>
            </fileset>
        </delete>
        <exec dir="${sources}" executable="/bin/bash" os="Linux,linux">
            <arg line="-c &quot;find . -name '*~' | xargs rm -f&quot;"/>
        </exec>
    </target>
 
    <target name="fixCRLF" depends="init"
            description="fix DOS linefeeds (CRLF)">
        <fixcrlf srcdir="${sources}"
                 eol="lf" eof="remove"
                 includes="**/*.java"/>
    </target>

    <target name="doc" depends="init"
            description="generate javadoc (=> ./doc/api/)">
        <mkdir dir="${doc}/api"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${doc}/api"/>
        </delete>
        <mkdir dir="${doc}/api"/>
 
        <javadoc maxmemory="256M"
                 failonerror="true"
                 packagenames="orbital.*"
                 sourcepath="${sources}" 
                 destdir="${doc}/api"
                 author="true"
                 version="true"
                 use="true"
                 windowtitle="Orbital"
                 doctitle="Orbital&lt;br&gt;API Specification"
                 header="Orbital&lt;br&gt;${timestamp}"
                 bottom="&lt;i&gt;Copyright &#169; 2002 Andre Platzer."
                 Package="true">
            <link href="http://java.sun.com/products/jdk/1.3/docs/api/"/>
        </javadoc>
    </target>

    <target name="jar" depends="init, clean, compile"
            description="build dist/*.jar">
        <mkdir dir="${dist}"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${dist}/"/>
        </delete>
        <mkdir dir="${dist}"/>
 
        <jar jarfile="${dist}/orbital.jar">
            <fileset dir="${classes}"
                includes="**/*.class"/>
        </jar>
    </target>

    <target name="env" depends="init"> <!-- for debugging -->
        <echo>

        basedir=${basedir}
        sources=${sources}
        classes=${classes}
        lib=${lib}
        doc=${doc}
        dist=${dist}
        resources=${resources}

        </echo>
    </target>

</project>
